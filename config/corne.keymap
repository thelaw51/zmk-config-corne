/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&sl { release-after-ms = <1500>; };

/ {
    macros {
        restart_debug: restart_debug {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp F5>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT>;
        };

        stop_debug: stop_debug {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp F5>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "STOP_DEBUG";
        };

        rebuild_debug: rebuild_debug {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp B>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT>;

            label = "REBUILD_DEBUG";
        };

        step_over: step_over {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp F11>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "STEP_OVER";
        };

        comment: comment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp K>,
                <&macro_release>,
                <&kp LEFT_CONTROL>,
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "COMMENT";
        };

        uncomment: uncomment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp K>,
                <&macro_release>,
                <&kp LEFT_CONTROL>,
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp U>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "UNCOMMENT";
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC  |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | BKSP|

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P     &kp ESC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RALT
                         &kp LGUI  &sl 1  &kp SPACE    &kp RET  &sl 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | ALT  |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |RSTDB|     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | BKSP|

            bindings = <
&kp TAB           &kp N1             &kp N2           &kp N3      &kp N4      &kp N5              &kp N6    &kp N7          &kp N8       &kp N9          &kp N0   &trans
&kp LEFT_SHIFT    &uncomment         &bt BT_CLR       &bt BT_PRV  &bt BT_NXT  &comment            &kp LEFT  &kp DOWN        &kp UP       &kp RIGHT       &kp F11  &step_over
&kp LEFT_CONTROL  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREV  &kp C_NEXT  &kp C_PLAY_PAUSE    &kp F5    &restart_debug  &stop_debug  &rebuild_debug  &kp F9   &kp RALT
                                                      &kp LGUI    &trans      &kp SPACE           &kp RET   &trans          &kp BSPC
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | ALT  |
            // | SHFT |     |     |     |     |  `  |   |  -  |  =  |     |  [  |  ]  |  \   |
            // | CTRL |     |     |     |     |  ~  |   |  _  |  +  |     |  {  |  }  | "|"  |
            //                    | GUI |     | SPC |   | ENT |     | BKSP|

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp RALT
&kp LSHFT  &trans    &trans  &trans    &trans    &kp GRAVE    &kp MINUS  &kp EQUAL  &kp DEL    &kp LBKT  &kp RBKT  &kp BSLH
&kp LCTRL  &trans    &trans  &trans    &trans    &kp TILDE    &kp UNDER  &kp PLUS   &trans     &kp LBRC  &kp RBRC  &kp PIPE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp BSPC
            >;
        };
    };
};
